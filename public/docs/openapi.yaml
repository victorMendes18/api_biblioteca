openapi: 3.0.3
info:
  title: ApiBiblioteca
  description: 'The API offers a complete service for managing library book loans. It allows the registration of two types of users: administrators (ADM) and librarians (librarian), who will have access to the API''s functionalities. In addition, it is possible to manage the library''s collection, register students and control loans made by them.'
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/login:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Login successfully.'
                  access_token: Token
                  token_type: bearer
                  expires_in: 3600
                properties:
                  message:
                    type: string
                    example: 'Login successfully.'
                  access_token:
                    type: string
                    example: Token
                  token_type:
                    type: string
                    example: bearer
                  expires_in:
                    type: integer
                    example: 3600
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Error'
                  errors:
                    email:
                      - 'The email field is required.'
                properties:
                  message:
                    type: string
                    example: 'Validation Error'
                  errors:
                    type: object
                    example:
                      email:
                        - 'The email field is required.'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: gmnvazjmzipzgfioumruvkvzgiaiotlnjywdykqfafabbxjhznnimvfosscqpzecluvcboptavhzbtgwjeaamebmsvduxvzfhtkdfoorjtvjgwpwzvxoqgmasfylufmxgmbtaqgtzfklmmmzmwjljpuumhpixhszkniarkqdhmdcftpmlaaxarfsonaacxndpfmhxquhgivydzwigqrh
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: tshvsoe
              required:
                - email
                - password
      security: []
  /api/logout:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {token}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n    \"message\" => \"User successfully logged out.\"\n}"
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Error'
                  errors:
                    email:
                      - 'The email field is required.'
                properties:
                  message:
                    type: string
                    example: 'Validation Error'
                  errors:
                    type: object
                    example:
                      email:
                        - 'The email field is required.'
      tags:
        - Auth
      security: []
  /api/books:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {token}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Books returned successfully.'
                  books:
                    -
                      id: 1
                      title: Book
                      author: User
                      isbn: '9792132370946'
                      year_of_publication: 2002
                      number_of_pages: 123
                      public: 0
                      created_at: '2024-09-16T18:00:16.000000Z'
                      updated_at: '2024-09-18T17:07:49.000000Z'
                      deleted_at: null
                  total_books: 18
                properties:
                  message:
                    type: string
                    example: 'Books returned successfully.'
                  books:
                    type: array
                    example:
                      -
                        id: 1
                        title: Book
                        author: User
                        isbn: '9792132370946'
                        year_of_publication: 2002
                        number_of_pages: 123
                        public: 0
                        created_at: '2024-09-16T18:00:16.000000Z'
                        updated_at: '2024-09-18T17:07:49.000000Z'
                        deleted_at: null
                    items:
                      type: object
                  total_books:
                    type: integer
                    example: 18
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Error'
                  errors:
                    email:
                      - 'The email field is required.'
                properties:
                  message:
                    type: string
                    example: 'Validation Error'
                  errors:
                    type: object
                    example:
                      email:
                        - 'The email field is required.'
      tags:
        - Books
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 1
                page_size:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 0
                search:
                  type: string
                  description: ''
                  example: architecto
                isbn:
                  type: string
                  description: 'The value format is invalid. Must not be greater than 13 characters.'
                  example: mmwyehzoace
                ordering:
                  type: string
                  description: 'Must be one of <code>title</code> or <code>created_at</code>.'
                  example: title
      security: []
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {token}'
          schema:
            type: string
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Book created successfully.'
                  book:
                    title: Book
                    author: User
                    isbn: '9782932327286'
                    year_of_publication: 2012
                    number_of_pages: 1256
                    public: true
                    updated_at: '2024-09-22T01:24:18.000000Z'
                    created_at: '2024-09-22T01:24:18.000000Z'
                    id: 23
                properties:
                  message:
                    type: string
                    example: 'Book created successfully.'
                  book:
                    type: object
                    example:
                      title: Book
                      author: User
                      isbn: '9782932327286'
                      year_of_publication: 2012
                      number_of_pages: 1256
                      public: true
                      updated_at: '2024-09-22T01:24:18.000000Z'
                      created_at: '2024-09-22T01:24:18.000000Z'
                      id: 23
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Error'
                  errors:
                    email:
                      - 'The email field is required.'
                properties:
                  message:
                    type: string
                    example: 'Validation Error'
                  errors:
                    type: object
                    example:
                      email:
                        - 'The email field is required.'
      tags:
        - Books
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: nhhgmtytfppdzfmsbgptqscpjgekgjzkgtswyfdnslqyykdjibfwnmvrcbocrxskxxqwyjtlgemrdqjvpiwctzqixt
                author:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: bnvvovlfyspzgyfvkmdejdptuommbgehdwyfbnubkroeffhgeoaeamyimktlndeocxzrmhbxqyeftwvgpgheaixakcbrvhxgnfgiimzxnwdtoxftuyyferyeihkjdjwrxg
                isbn:
                  type: string
                  description: 'The value format is invalid. Must not be greater than 13 characters.'
                  example: iulvk
                year_of_publication:
                  type: integer
                  description: 'Must be at least 1000. Must not be greater than 2024.'
                  example: 1898
                number_of_pages:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 1
                public:
                  type: boolean
                  description: ''
                  example: false
              required:
                - title
                - author
                - isbn
                - year_of_publication
                - number_of_pages
                - public
      security: []
  '/api/books/{id}':
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {token}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Book updated successfully.'
                  book:
                    id: 23
                    title: Book
                    author: User
                    isbn: '9782932327286'
                    year_of_publication: 2012
                    number_of_pages: 1256
                    public: true
                    updated_at: '2024-09-22T01:24:18.000000Z'
                    created_at: '2024-09-22T01:24:18.000000Z'
                properties:
                  message:
                    type: string
                    example: 'Book updated successfully.'
                  book:
                    type: object
                    example:
                      id: 23
                      title: Book
                      author: User
                      isbn: '9782932327286'
                      year_of_publication: 2012
                      number_of_pages: 1256
                      public: true
                      updated_at: '2024-09-22T01:24:18.000000Z'
                      created_at: '2024-09-22T01:24:18.000000Z'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Error'
                  errors:
                    email:
                      - 'The email field is required.'
                properties:
                  message:
                    type: string
                    example: 'Validation Error'
                  errors:
                    type: object
                    example:
                      email:
                        - 'The email field is required.'
      tags:
        - Books
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: erynonqafthbtqcgxgedvkkgvmsivzibetfeirqyzvmkzbynbbcdqshwumtsjkcdawihmhvkymwaemmbbvieiwykv
                author:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: fewjgsidwrhlyxttaxnsofkkneokugehiankwfgcmzbfimtveqouostwnthcpxprworzilgrbiajpoyvnugvcsrqrtiwmgcdlxpunraccoolodlamsnark
                isbn:
                  type: string
                  description: 'The value format is invalid. Must not be greater than 13 characters.'
                  example: rydfqd
                year_of_publication:
                  type: integer
                  description: 'Must be at least 1000. Must not be greater than 2024.'
                  example: 1494
                number_of_pages:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 1
                public:
                  type: boolean
                  description: ''
                  example: false
              required:
                - title
                - author
                - isbn
                - year_of_publication
                - number_of_pages
                - public
      security: []
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {token}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Book returned successfully.'
                  book:
                    id: 23
                    title: Book
                    author: User
                    isbn: '9782932327286'
                    year_of_publication: 2012
                    number_of_pages: 1256
                    public: true
                    updated_at: '2024-09-22T01:24:18.000000Z'
                    created_at: '2024-09-22T01:24:18.000000Z'
                properties:
                  message:
                    type: string
                    example: 'Book returned successfully.'
                  book:
                    type: object
                    example:
                      id: 23
                      title: Book
                      author: User
                      isbn: '9782932327286'
                      year_of_publication: 2012
                      number_of_pages: 1256
                      public: true
                      updated_at: '2024-09-22T01:24:18.000000Z'
                      created_at: '2024-09-22T01:24:18.000000Z'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Error'
                  errors:
                    email:
                      - 'The email field is required.'
                properties:
                  message:
                    type: string
                    example: 'Validation Error'
                  errors:
                    type: object
                    example:
                      email:
                        - 'The email field is required.'
      tags:
        - Books
      security: []
    delete:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {token}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Book deleted successfully.'
                  book:
                    id: 23
                    title: Book
                    author: User
                    isbn: '9782932327286'
                    year_of_publication: 2012
                    number_of_pages: 1256
                    public: true
                    updated_at: '2024-09-22T01:24:18.000000Z'
                    created_at: '2024-09-22T01:24:18.000000Z'
                properties:
                  message:
                    type: string
                    example: 'Book deleted successfully.'
                  book:
                    type: object
                    example:
                      id: 23
                      title: Book
                      author: User
                      isbn: '9782932327286'
                      year_of_publication: 2012
                      number_of_pages: 1256
                      public: true
                      updated_at: '2024-09-22T01:24:18.000000Z'
                      created_at: '2024-09-22T01:24:18.000000Z'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Error'
                  errors:
                    email:
                      - 'The email field is required.'
                properties:
                  message:
                    type: string
                    example: 'Validation Error'
                  errors:
                    type: object
                    example:
                      email:
                        - 'The email field is required.'
      tags:
        - Books
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the book.'
        example: 1
        required: true
        schema:
          type: integer
  /api/rents:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {token}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Rents returned successfully.'
                  rents:
                    -
                      id: 4
                      book_id: 15
                      student_id: 15
                      delivery_date: '2024-10-02'
                      delivered: 0
                      created_at: '2024-09-17T00:46:45.000000Z'
                      updated_at: '2024-09-18T03:01:33.000000Z'
                      deleted_at: null
                      book:
                        id: 15
                        title: Book
                        author: Author
                        isbn: '9785659568941'
                        year_of_publication: 1970
                        number_of_pages: 685
                        public: 1
                        created_at: '2024-09-17T00:46:45.000000Z'
                        updated_at: '2024-09-17T00:46:45.000000Z'
                        deleted_at: null
                      student:
                        id: 15
                        name: Student
                        email: student@halvorson.com
                        phone: '5587999999999'
                        address: address
                        created_at: '2024-09-17T00:46:45.000000Z'
                        updated_at: '2024-09-17T00:46:45.000000Z'
                        deleted_at: null
                  total_rents: 29
                properties:
                  message:
                    type: string
                    example: 'Rents returned successfully.'
                  rents:
                    type: array
                    example:
                      -
                        id: 4
                        book_id: 15
                        student_id: 15
                        delivery_date: '2024-10-02'
                        delivered: 0
                        created_at: '2024-09-17T00:46:45.000000Z'
                        updated_at: '2024-09-18T03:01:33.000000Z'
                        deleted_at: null
                        book:
                          id: 15
                          title: Book
                          author: Author
                          isbn: '9785659568941'
                          year_of_publication: 1970
                          number_of_pages: 685
                          public: 1
                          created_at: '2024-09-17T00:46:45.000000Z'
                          updated_at: '2024-09-17T00:46:45.000000Z'
                          deleted_at: null
                        student:
                          id: 15
                          name: Student
                          email: student@halvorson.com
                          phone: '5587999999999'
                          address: address
                          created_at: '2024-09-17T00:46:45.000000Z'
                          updated_at: '2024-09-17T00:46:45.000000Z'
                          deleted_at: null
                    items:
                      type: object
                  total_rents:
                    type: integer
                    example: 29
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Error'
                  errors:
                    email:
                      - 'The email field is required.'
                properties:
                  message:
                    type: string
                    example: 'Validation Error'
                  errors:
                    type: object
                    example:
                      email:
                        - 'The email field is required.'
      tags:
        - Rents
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 1
                page_size:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 1
                search:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ztvjoewbntzgyieyxgygq
                student:
                  type: string
                  description: ''
                  example: magnam
                ordering:
                  type: string
                  description: 'Must be one of <code>delivery_date</code> or <code>created_at</code>.'
                  example: delivery_date
      security: []
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {token}'
          schema:
            type: string
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Rent successfully created.'
                  rent:
                    book_id: 3
                    student_id: 2
                    delivery_date: '2024-09-29'
                    delivered: false
                    updated_at: '2024-09-22T01:50:58.000000Z'
                    created_at: '2024-09-22T01:50:58.000000Z'
                    id: 13
                properties:
                  message:
                    type: string
                    example: 'Rent successfully created.'
                  rent:
                    type: object
                    example:
                      book_id: 3
                      student_id: 2
                      delivery_date: '2024-09-29'
                      delivered: false
                      updated_at: '2024-09-22T01:50:58.000000Z'
                      created_at: '2024-09-22T01:50:58.000000Z'
                      id: 13
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Error'
                  errors:
                    email:
                      - 'The email field is required.'
                properties:
                  message:
                    type: string
                    example: 'Validation Error'
                  errors:
                    type: object
                    example:
                      email:
                        - 'The email field is required.'
      tags:
        - Rents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                book_id:
                  type: string
                  description: ''
                  example: quae
                student_id:
                  type: string
                  description: ''
                  example: aspernatur
                delivery_date:
                  type: string
                  description: 'Must be a valid date. Must be a date after <code>today</code>.'
                  example: '2046-05-30'
                delivered:
                  type: boolean
                  description: ''
                  example: true
              required:
                - book_id
                - student_id
                - delivery_date
      security: []
  '/api/rents/{id}':
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {token}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Rent updated successfully.'
                  rent:
                    id: 4
                    book_id: 15
                    student_id: 15
                    delivery_date: '2024-10-02'
                    delivered: 0
                    created_at: '2024-09-17T00:46:45.000000Z'
                    updated_at: '2024-09-18T03:01:33.000000Z'
                    deleted_at: null
                    book:
                      id: 15
                      title: Book
                      author: Author
                      isbn: '9785659568941'
                      year_of_publication: 1970
                      number_of_pages: 685
                      public: 1
                      created_at: '2024-09-17T00:46:45.000000Z'
                      updated_at: '2024-09-17T00:46:45.000000Z'
                      deleted_at: null
                    student:
                      id: 15
                      name: Student
                      email: student@halvorson.com
                      phone: '5587999999999'
                      address: address
                      created_at: '2024-09-17T00:46:45.000000Z'
                      updated_at: '2024-09-17T00:46:45.000000Z'
                      deleted_at: null
                properties:
                  message:
                    type: string
                    example: 'Rent updated successfully.'
                  rent:
                    type: object
                    example:
                      id: 4
                      book_id: 15
                      student_id: 15
                      delivery_date: '2024-10-02'
                      delivered: 0
                      created_at: '2024-09-17T00:46:45.000000Z'
                      updated_at: '2024-09-18T03:01:33.000000Z'
                      deleted_at: null
                      book:
                        id: 15
                        title: Book
                        author: Author
                        isbn: '9785659568941'
                        year_of_publication: 1970
                        number_of_pages: 685
                        public: 1
                        created_at: '2024-09-17T00:46:45.000000Z'
                        updated_at: '2024-09-17T00:46:45.000000Z'
                        deleted_at: null
                      student:
                        id: 15
                        name: Student
                        email: student@halvorson.com
                        phone: '5587999999999'
                        address: address
                        created_at: '2024-09-17T00:46:45.000000Z'
                        updated_at: '2024-09-17T00:46:45.000000Z'
                        deleted_at: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Error'
                  errors:
                    email:
                      - 'The email field is required.'
                properties:
                  message:
                    type: string
                    example: 'Validation Error'
                  errors:
                    type: object
                    example:
                      email:
                        - 'The email field is required.'
      tags:
        - Rents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                book_id:
                  type: string
                  description: ''
                  example: qui
                student_id:
                  type: string
                  description: ''
                  example: ipsum
                delivery_date:
                  type: string
                  description: 'Must be a valid date. Must be a date after <code>today</code>.'
                  example: '2084-11-05'
                delivered:
                  type: boolean
                  description: ''
                  example: true
              required:
                - book_id
                - student_id
                - delivery_date
      security: []
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {token}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Rent returned successfully.'
                  rent:
                    id: 4
                    book_id: 15
                    student_id: 15
                    delivery_date: '2024-10-02'
                    delivered: 0
                    created_at: '2024-09-17T00:46:45.000000Z'
                    updated_at: '2024-09-18T03:01:33.000000Z'
                    deleted_at: null
                    book:
                      id: 15
                      title: Book
                      author: Author
                      isbn: '9785659568941'
                      year_of_publication: 1970
                      number_of_pages: 685
                      public: 1
                      created_at: '2024-09-17T00:46:45.000000Z'
                      updated_at: '2024-09-17T00:46:45.000000Z'
                      deleted_at: null
                    student:
                      id: 15
                      name: Student
                      email: student@halvorson.com
                      phone: '5587999999999'
                      address: address
                      created_at: '2024-09-17T00:46:45.000000Z'
                      updated_at: '2024-09-17T00:46:45.000000Z'
                      deleted_at: null
                properties:
                  message:
                    type: string
                    example: 'Rent returned successfully.'
                  rent:
                    type: object
                    example:
                      id: 4
                      book_id: 15
                      student_id: 15
                      delivery_date: '2024-10-02'
                      delivered: 0
                      created_at: '2024-09-17T00:46:45.000000Z'
                      updated_at: '2024-09-18T03:01:33.000000Z'
                      deleted_at: null
                      book:
                        id: 15
                        title: Book
                        author: Author
                        isbn: '9785659568941'
                        year_of_publication: 1970
                        number_of_pages: 685
                        public: 1
                        created_at: '2024-09-17T00:46:45.000000Z'
                        updated_at: '2024-09-17T00:46:45.000000Z'
                        deleted_at: null
                      student:
                        id: 15
                        name: Student
                        email: student@halvorson.com
                        phone: '5587999999999'
                        address: address
                        created_at: '2024-09-17T00:46:45.000000Z'
                        updated_at: '2024-09-17T00:46:45.000000Z'
                        deleted_at: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Error'
                  errors:
                    email:
                      - 'The email field is required.'
                properties:
                  message:
                    type: string
                    example: 'Validation Error'
                  errors:
                    type: object
                    example:
                      email:
                        - 'The email field is required.'
      tags:
        - Rents
      security: []
    delete:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {token}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Rent deleted successfully.'
                  rent:
                    id: 4
                    book_id: 15
                    student_id: 15
                    delivery_date: '2024-10-02'
                    delivered: 0
                    created_at: '2024-09-17T00:46:45.000000Z'
                    updated_at: '2024-09-18T03:01:33.000000Z'
                    deleted_at: null
                    book:
                      id: 15
                      title: Book
                      author: Author
                      isbn: '9785659568941'
                      year_of_publication: 1970
                      number_of_pages: 685
                      public: 1
                      created_at: '2024-09-17T00:46:45.000000Z'
                      updated_at: '2024-09-17T00:46:45.000000Z'
                      deleted_at: null
                    student:
                      id: 15
                      name: Student
                      email: student@halvorson.com
                      phone: '5587999999999'
                      address: address
                      created_at: '2024-09-17T00:46:45.000000Z'
                      updated_at: '2024-09-17T00:46:45.000000Z'
                      deleted_at: null
                properties:
                  message:
                    type: string
                    example: 'Rent deleted successfully.'
                  rent:
                    type: object
                    example:
                      id: 4
                      book_id: 15
                      student_id: 15
                      delivery_date: '2024-10-02'
                      delivered: 0
                      created_at: '2024-09-17T00:46:45.000000Z'
                      updated_at: '2024-09-18T03:01:33.000000Z'
                      deleted_at: null
                      book:
                        id: 15
                        title: Book
                        author: Author
                        isbn: '9785659568941'
                        year_of_publication: 1970
                        number_of_pages: 685
                        public: 1
                        created_at: '2024-09-17T00:46:45.000000Z'
                        updated_at: '2024-09-17T00:46:45.000000Z'
                        deleted_at: null
                      student:
                        id: 15
                        name: Student
                        email: student@halvorson.com
                        phone: '5587999999999'
                        address: address
                        created_at: '2024-09-17T00:46:45.000000Z'
                        updated_at: '2024-09-17T00:46:45.000000Z'
                        deleted_at: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Error'
                  errors:
                    email:
                      - 'The email field is required.'
                properties:
                  message:
                    type: string
                    example: 'Validation Error'
                  errors:
                    type: object
                    example:
                      email:
                        - 'The email field is required.'
      tags:
        - Rents
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the rent.'
        example: 1
        required: true
        schema:
          type: integer
  /api/students:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {token}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Students returned successfully.'
                  students:
                    -
                      id: 1
                      name: Student
                      email: Student@gmail.com
                      phone: '5587999999999'
                      address: address
                      created_at: '2024-09-16T19:47:50.000000Z'
                      updated_at: '2024-09-16T19:47:50.000000Z'
                      deleted_at: null
                  total_students: 12
                properties:
                  message:
                    type: string
                    example: 'Students returned successfully.'
                  students:
                    type: array
                    example:
                      -
                        id: 1
                        name: Student
                        email: Student@gmail.com
                        phone: '5587999999999'
                        address: address
                        created_at: '2024-09-16T19:47:50.000000Z'
                        updated_at: '2024-09-16T19:47:50.000000Z'
                        deleted_at: null
                    items:
                      type: object
                  total_students:
                    type: integer
                    example: 12
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Error'
                  errors:
                    email:
                      - 'The email field is required.'
                properties:
                  message:
                    type: string
                    example: 'Validation Error'
                  errors:
                    type: object
                    example:
                      email:
                        - 'The email field is required.'
      tags:
        - Students
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 1
                page_size:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 0
                search:
                  type: string
                  description: ''
                  example: enim
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: bednar.leda@example.net
                ordering:
                  type: string
                  description: 'Must be one of <code>name</code> or <code>created_at</code>.'
                  example: created_at
      security: []
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {token}'
          schema:
            type: string
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Student created successfully.'
                  student:
                    name: student
                    email: student@gmail.com
                    phone: '5587999999999'
                    address: address
                    created_at: '2024-09-22T01:35:48.000000Z'
                    updated_at: '2024-09-22T01:35:48.000000Z'
                    id: 22
                properties:
                  message:
                    type: string
                    example: 'Student created successfully.'
                  student:
                    type: object
                    example:
                      name: student
                      email: student@gmail.com
                      phone: '5587999999999'
                      address: address
                      created_at: '2024-09-22T01:35:48.000000Z'
                      updated_at: '2024-09-22T01:35:48.000000Z'
                      id: 22
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Error'
                  errors:
                    email:
                      - 'The email field is required.'
                properties:
                  message:
                    type: string
                    example: 'Validation Error'
                  errors:
                    type: object
                    example:
                      email:
                        - 'The email field is required.'
      tags:
        - Students
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: fgfxvxexebjzxhxclmyngmxvagftvkcgnndwnkvamoyapycntbuvevhdjvjqahunbepmchapcpafdnlimktdiohxizpcxhzggcopfvmebvraje
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: uyhoyilcf
                phone:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: erjyg
                address:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: lvkldadfyvfoojgvgeatqguijifzjsszogmqrqbiwqilrijiapamexocmmeuwguijqeevxlumucdfqxfxdhqrkhhap
              required:
                - name
                - email
      security: []
  '/api/students/{id}':
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {token}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Student updated successfully.'
                  student:
                    id: 11
                    name: student
                    email: student@gmail.com
                    phone: '5587999999999'
                    address: address
                    created_at: '2024-09-22T01:35:48.000000Z'
                    updated_at: '2024-09-22T01:35:48.000000Z'
                    deleted_at: null
                properties:
                  message:
                    type: string
                    example: 'Student updated successfully.'
                  student:
                    type: object
                    example:
                      id: 11
                      name: student
                      email: student@gmail.com
                      phone: '5587999999999'
                      address: address
                      created_at: '2024-09-22T01:35:48.000000Z'
                      updated_at: '2024-09-22T01:35:48.000000Z'
                      deleted_at: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Error'
                  errors:
                    email:
                      - 'The email field is required.'
                properties:
                  message:
                    type: string
                    example: 'Validation Error'
                  errors:
                    type: object
                    example:
                      email:
                        - 'The email field is required.'
      tags:
        - Students
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: zsjlnaxfaqbdvbsxlclfdtljcgslhaazwtsqilrjwodpkqpiyjzmswwtcvhusmhyibohhfhyieqmajjjwmgtenpqzejonvzduplrwcwisjzlpgymfgcqisnwzmutstuhlbuiysykwuvqwytielvhqjxytevlqkfbvrigrvnmcmxolxqdggvmkjlopsdwcgaixxcwaveepbbiyortlommqfhtojrwmcqhtilrzssdjcchsddogosdt
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: qzolpmtbvqxczqhqmajpmsgvsxsufkrnlavxpbwsdtpmmfsnbamsfqdaayooeazxlkxikpfmeqxzdtrctkgardpdudhwgryzwwferfkgqpcambbdcqyopuwiwnlefubiacynpchaoplcxikuvrubmzftcmwapycolj
                phone:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: dpcadk
                address:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: eocqdjobldgebafnzlltsmkklksnkhmiaxskjlhpiihpqvzmhnxoyicyeteivuukymidkraqqnxozdsqrumthedftzlfbjufkijadvppbjyeormoenqlnjzkrnpuqkwqeswzlxnavjnerrompgqcfmwzinuvqjbqfvrrzhqcrxibolwlspjjdkrgiqchxaw
              required:
                - name
                - email
      security: []
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {token}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Student returned successfully.'
                  student:
                    id: 11
                    name: student
                    email: student@gmail.com
                    phone: '5587999999999'
                    address: address
                    created_at: '2024-09-22T01:35:48.000000Z'
                    updated_at: '2024-09-22T01:35:48.000000Z'
                    deleted_at: null
                properties:
                  message:
                    type: string
                    example: 'Student returned successfully.'
                  student:
                    type: object
                    example:
                      id: 11
                      name: student
                      email: student@gmail.com
                      phone: '5587999999999'
                      address: address
                      created_at: '2024-09-22T01:35:48.000000Z'
                      updated_at: '2024-09-22T01:35:48.000000Z'
                      deleted_at: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Error'
                  errors:
                    email:
                      - 'The email field is required.'
                properties:
                  message:
                    type: string
                    example: 'Validation Error'
                  errors:
                    type: object
                    example:
                      email:
                        - 'The email field is required.'
      tags:
        - Students
      security: []
    delete:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {token}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Student deleted successfully.'
                  student:
                    id: 11
                    name: student
                    email: student@gmail.com
                    phone: '5587999999999'
                    address: address
                    created_at: '2024-09-22T01:35:48.000000Z'
                    updated_at: '2024-09-22T01:35:48.000000Z'
                    deleted_at: null
                properties:
                  message:
                    type: string
                    example: 'Student deleted successfully.'
                  student:
                    type: object
                    example:
                      id: 11
                      name: student
                      email: student@gmail.com
                      phone: '5587999999999'
                      address: address
                      created_at: '2024-09-22T01:35:48.000000Z'
                      updated_at: '2024-09-22T01:35:48.000000Z'
                      deleted_at: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Error'
                  errors:
                    email:
                      - 'The email field is required.'
                properties:
                  message:
                    type: string
                    example: 'Validation Error'
                  errors:
                    type: object
                    example:
                      email:
                        - 'The email field is required.'
      tags:
        - Students
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the student.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {token}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Users returned successfully.'
                  users:
                    -
                      id: 1
                      name: user
                      email: user@gmail.com
                      type: adm
                      email_verified_at: '2024-09-16T18:00:16.000000Z'
                      avatar_url: null
                      created_at: '2024-09-16T18:00:16.000000Z'
                      updated_at: '2024-09-16T18:00:16.000000Z'
                      deleted_at: null
                  total_users: 3
                properties:
                  message:
                    type: string
                    example: 'Users returned successfully.'
                  users:
                    type: array
                    example:
                      -
                        id: 1
                        name: user
                        email: user@gmail.com
                        type: adm
                        email_verified_at: '2024-09-16T18:00:16.000000Z'
                        avatar_url: null
                        created_at: '2024-09-16T18:00:16.000000Z'
                        updated_at: '2024-09-16T18:00:16.000000Z'
                        deleted_at: null
                    items:
                      type: object
                  total_users:
                    type: integer
                    example: 3
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Error'
                  errors:
                    email:
                      - 'The email field is required.'
                properties:
                  message:
                    type: string
                    example: 'Validation Error'
                  errors:
                    type: object
                    example:
                      email:
                        - 'The email field is required.'
      tags:
        - Users
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 0
                page_size:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 1
                search:
                  type: string
                  description: ''
                  example: perferendis
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: reynolds.lera@example.org
                ordering:
                  type: string
                  description: 'Must be one of <code>name</code> or <code>created_at</code>.'
                  example: created_at
      security: []
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {token}'
          schema:
            type: string
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User created successfully.'
                  user:
                    name: user
                    email: user@gmail.com
                    type: adm
                    updated_at: '2024-09-22T00:30:29.000000Z'
                    created_at: '2024-09-22T00:30:29.000000Z'
                    id: 16
                properties:
                  message:
                    type: string
                    example: 'User created successfully.'
                  user:
                    type: object
                    example:
                      name: user
                      email: user@gmail.com
                      type: adm
                      updated_at: '2024-09-22T00:30:29.000000Z'
                      created_at: '2024-09-22T00:30:29.000000Z'
                      id: 16
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Error'
                  errors:
                    email:
                      - 'The email field is required.'
                properties:
                  message:
                    type: string
                    example: 'Validation Error'
                  errors:
                    type: object
                    example:
                      email:
                        - 'The email field is required.'
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: hliifegeyustvoweydbpjfhrfcsqxwtnebdnhdsivhanwrdsrhqqirmnxcobgwmvbtykxavdykpasyplyrutaihnnwufervrezarjpsksfmdbeurwsdoyffzxwdslnupqytaleoftyadxk
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: ichrtghpmveddlqsvbmjpuoinijiwmburbiktlniprybwcirojoaxtjzhbxecjvwhvhekcrnwixtslpuipkosasspghtjurrzmenlmuwxsjuhjvkrmuxuhkynvtosxdlbgmkrdmgabywnlgyilolywdzdgxmjgbuowkocayztndljfeopgsbtehuyficolkuwlkzsphsjfevqizhlmwtpegtdyhzuvtygjformfgid
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: ekpyabeh
                type:
                  type: string
                  description: 'Must be one of <code>adm</code> or <code>librarian</code>.'
                  example: librarian
              required:
                - name
                - email
                - password
                - type
      security: []
  '/api/users/{id}':
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {token}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User updated successfully.'
                  user:
                    id: 3
                    name: user
                    email: user@gmail.com
                    type: librarian
                    email_verified_at: '2024-09-16T15:42:16.000000Z'
                    avatar_url: null
                    created_at: '2024-09-18T16:57:05.000000Z'
                    updated_at: '2024-09-18T17:01:00.000000Z'
                    deleted_at: null
                properties:
                  message:
                    type: string
                    example: 'User updated successfully.'
                  user:
                    type: object
                    example:
                      id: 3
                      name: user
                      email: user@gmail.com
                      type: librarian
                      email_verified_at: '2024-09-16T15:42:16.000000Z'
                      avatar_url: null
                      created_at: '2024-09-18T16:57:05.000000Z'
                      updated_at: '2024-09-18T17:01:00.000000Z'
                      deleted_at: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Error'
                  errors:
                    email:
                      - 'The email field is required.'
                properties:
                  message:
                    type: string
                    example: 'Validation Error'
                  errors:
                    type: object
                    example:
                      email:
                        - 'The email field is required.'
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: gfuhbditqqdjqskgbvoydzwlfunoufsydavdlsbsrfibhrezgzhtinhyqlxlykswweejpfbnrotvxpwleazmqxudrtuywicuwhuwrychwheiiekiorrtegqfjqymxqctaypktoicffvuclqzohybumoyttoyhhowgrizapxptskwdqyobxrurvhuiwgtzfpofnarrvcjpwzjfvnyzoidtxncshskjaekxqlnffgx
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: ivwdaimdtfttqfhibbwmykxwmgbtamphcrqxabmkdemnjmukknrpfydcelrmjkdkautbzupshomxzsmlxztawjiosofxnrmnwtrd
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: ''
                type:
                  type: string
                  description: 'Must be one of <code>adm</code> or <code>librarian</code>.'
                  example: librarian
              required:
                - name
                - email
                - password
                - type
      security: []
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {token}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User returned successfully.'
                  user:
                    id: 3
                    name: user
                    email: user@gmail.com
                    type: librarian
                    email_verified_at: '2024-09-16T15:42:16.000000Z'
                    avatar_url: null
                    created_at: '2024-09-18T16:57:05.000000Z'
                    updated_at: '2024-09-18T17:01:00.000000Z'
                    deleted_at: null
                properties:
                  message:
                    type: string
                    example: 'User returned successfully.'
                  user:
                    type: object
                    example:
                      id: 3
                      name: user
                      email: user@gmail.com
                      type: librarian
                      email_verified_at: '2024-09-16T15:42:16.000000Z'
                      avatar_url: null
                      created_at: '2024-09-18T16:57:05.000000Z'
                      updated_at: '2024-09-18T17:01:00.000000Z'
                      deleted_at: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Error'
                  errors:
                    email:
                      - 'The email field is required.'
                properties:
                  message:
                    type: string
                    example: 'Validation Error'
                  errors:
                    type: object
                    example:
                      email:
                        - 'The email field is required.'
      tags:
        - Users
      security: []
    delete:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {token}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User deleted successfully.'
                  user:
                    id: 3
                    name: user
                    email: user@gmail.com
                    type: librarian
                    email_verified_at: '2024-09-16T15:42:16.000000Z'
                    avatar_url: null
                    created_at: '2024-09-18T16:57:05.000000Z'
                    updated_at: '2024-09-18T17:01:00.000000Z'
                    deleted_at: null
                properties:
                  message:
                    type: string
                    example: 'User deleted successfully.'
                  user:
                    type: object
                    example:
                      id: 3
                      name: user
                      email: user@gmail.com
                      type: librarian
                      email_verified_at: '2024-09-16T15:42:16.000000Z'
                      avatar_url: null
                      created_at: '2024-09-18T16:57:05.000000Z'
                      updated_at: '2024-09-18T17:01:00.000000Z'
                      deleted_at: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Error'
                  errors:
                    email:
                      - 'The email field is required.'
                properties:
                  message:
                    type: string
                    example: 'Validation Error'
                  errors:
                    type: object
                    example:
                      email:
                        - 'The email field is required.'
      tags:
        - Users
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users/reset_password:
    patch:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {token}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  old_password: testesenha
                  new_password: testesenha1
                  new_password_confirmation: testesenha1
                properties:
                  old_password:
                    type: string
                    example: testesenha
                  new_password:
                    type: string
                    example: testesenha1
                  new_password_confirmation:
                    type: string
                    example: testesenha1
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Error'
                  errors:
                    email:
                      - 'The email field is required.'
                properties:
                  message:
                    type: string
                    example: 'Validation Error'
                  errors:
                    type: object
                    example:
                      email:
                        - 'The email field is required.'
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: jzdflwfz
                new_password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: hzq
              required:
                - old_password
                - new_password
      security: []
  /api/users/confirmationEmail:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {token}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n   \"message\": \"Email confirmed successfully.\",\n}"
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation Error'
                  errors:
                    email:
                      - 'The email field is required.'
                properties:
                  message:
                    type: string
                    example: 'Validation Error'
                  errors:
                    type: object
                    example:
                      email:
                        - 'The email field is required.'
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: voluptatem
              required:
                - token
      security: []
tags:
  -
    name: Auth
    description: ''
  -
    name: Books
    description: ''
  -
    name: Rents
    description: ''
  -
    name: Students
    description: ''
  -
    name: Users
    description: ''
